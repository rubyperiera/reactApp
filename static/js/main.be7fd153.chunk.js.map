{"version":3,"sources":["components/ContactsTable.js","components/ContactDeals.js","containers/Contacts.js","App.js","reportWebVitals.js","index.js"],"names":["ContactsTable","Component","person","className","length","map","index","console","log","links","deals","firstName","lastName","geoIps","contactDeals","contactTags","colSpan","Contacts","props","state","loading","fetch","method","headers","response","json","data","this","setState","contacts","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAgDeA,GC9CYC,Y,MDEL,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAIpB,OACI,wBAAOC,UAAY,SAAnB,UACI,wBAAOA,UAAY,QAAnB,UAEI,0CACA,6CACA,0CACA,uCACA,yCAIJ,uBAAOA,UAAY,QAAnB,SAEMD,EAAOE,OAAS,EACdF,EAAOG,KAAI,SAACH,EAAQI,GAEhB,OADAC,QAAQC,IAAIN,EAAOO,MAAMC,OAErB,qBAAgBP,UAAY,MAA5B,UACI,oBAAIA,UAAU,QAAd,SAAuBD,EAAOS,UAAY,IAAMT,EAAOU,WACvD,6BAAKV,EAAOO,MAAMC,QAClB,6BAAMR,EAAOO,MAAMI,SACnB,6BAAKX,EAAOO,MAAMK,eAClB,6BAAMZ,EAAOO,MAAMM,gBALdT,MAab,6BACI,oBAAIU,QAAQ,IAAZ,iCE8CbC,E,kDAlFb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACCC,MAAQ,CACXC,SAAU,EACVlB,OAAQ,IAJI,E,wLAwDd,sF,SAEqBmB,MAFrB,sFAEgC,CAChCC,OAAQ,MACRC,QAAS,CACP,YACE,8E,cAJAC,E,gBAOaA,EAASC,O,OAAtBC,E,OACNC,KAAKC,SAAS,CAAE1B,OAAQwB,EAAKG,SAAUT,SAAS,IAChDb,QAAQC,IAAIkB,G,qIAIZ,OACI,8BACA,cAAC,EAAD,CAAexB,OAAQyB,KAAKR,MAAMjB,e,GA1EnBD,aCCR,SAAS6B,IACtB,OACE,qBAAK3B,UAAU,MAAf,SACE,8BACM,cAAC,EAAD,QCRZ,IAYe4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACZ,EAAD,MAEFa,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.be7fd153.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ContactDeals from \"./ContactDeals\";\r\nimport \"./contactTable.css\";\r\n\r\nconst ContactsTable = ({person}) => {\r\n    \r\n\r\n    \r\n    return (\r\n        <table className = \"ctable\">\r\n            <thead className = \"chead\">\r\n                \r\n                <th>Contact </th>                \r\n                <th>Total Value</th>\r\n                <th>Location</th>\r\n                <th>Deals</th>\r\n                <th>Tags</th>\r\n               \r\n               \r\n            </thead>\r\n            <tbody className = \"cbody\">\r\n\r\n                {(person.length > 0) ? (\r\n                    person.map((person, index) => {\r\n                        console.log(person.links.deals);\r\n                        return (\r\n                            <tr key={index} className = \"ctr\">\r\n                                <td className=\"cdata\">{person.firstName + \" \" + person.lastName }</td>\r\n                                <td>{person.links.deals }</td>\r\n                                <td>{ person.links.geoIps}</td>\r\n                                <td>{person.links.contactDeals}</td>\r\n                                <td>{ person.links.contactTags}</td>\r\n                                                                \r\n                                \r\n                                \r\n                            </tr>\r\n                        );\r\n                    })\r\n                ) : (\r\n                        <tr>\r\n                            <td colSpan=\"5\">Loading...</td>\r\n                        </tr>\r\n                    )}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default ContactsTable;","import React , {Component} from \"react\";\r\n\r\nclass ContactDeals extends Component { \r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      deals: []\r\n    };\r\n  }\r\n    \r\n \r\n  async componentDidMount() {\r\n    const url = \"https://cors-anywhere.herokuapp.com/\"+this.props.tags;\r\n     console.log(url); \r\n     fetch(url, { \r\n      method: 'GET', \r\n      headers: {\r\n          'Api-Token' : \"bcd062dedabcd0f1ac8a568cdcf58660c44d7e79b91763cc1a5d0c03d52c522d851fceb0\",\r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n        this.setState({ deals: data,loading:false })\r\n    })\r\n      //this.setState({ deals: data.deals, loading: false });\r\n        \r\n  }\r\n\r\n  render() {\r\n   \r\n    return (\r\n        <div>\r\n            {this.state.deals.currency}\r\n        </div>\r\n    )\r\n  }\r\n        \r\n     \r\n\r\n}\r\n\r\nexport default ContactDeals;","import React, { Component } from \"react\";\r\nimport ContactsTable from \"../components/ContactsTable\";\r\n\r\nclass Contacts extends Component {\r\n  constructor(props){\r\n    super(props)\r\n      this.state = {\r\n        loading : true,\r\n        person: []\r\n      };\r\n    \r\n  }\r\n    \r\n// This part of code is for running the Promise.all for nested Apis in a single API call. Please read the readMe.txt\r\n\r\n  //   async componentDidMount() {\r\n      \r\n  //     const url = \"https://cors-anywhere.herokuapp.com/https://sahmed93846.api-us1.com/api/3/contacts/\";\r\n  //     const header = { method: 'GET', \r\n  //                 headers: {\r\n  //                   'Api-Token' : \"bcd062dedabcd0f1ac8a568cdcf58660c44d7e79b91763cc1a5d0c03d52c522d851fceb0\"\r\n  //   }};\r\n  //     const contacts = await fetch(url,header).then(response => response.json());\r\n  //     this.contacts = contacts;\r\n  //     const contact = this.contacts.contacts;\r\n  //     const deals = contact.map(contact => contact.links.deals);\r\n  //     const requests = deals.map(deals => fetch(\"https://cors-anywhere.herokuapp.com/\"+deals,header));\r\n  //     const dataObj={}\r\n\r\n  //     Promise.all(requests)\r\n  //     .then(responses => {\r\n  //       // all responses are resolved successfully\r\n  //       for(let response of responses) {\r\n  //         console.log(`${response.url}: ${response.status}`); // shows 200 for every url\r\n  //       }\r\n\r\n  //       return responses;\r\n  //     })\r\n  //     // map array of responses into an array of response.json() to read their content\r\n  //     .then(responses => Promise.all(responses.map(r => r.json())))\r\n  //     // all JSON answers are parsed: \"data\" is the array of them\r\n  //     .then(data => data.forEach(data => console.log(data.deals)))\r\n\r\n      \r\n\r\n\r\n\r\n\r\n\r\n  //     // const deal = await deals.map(deals => fetch(\"https://cors-anywhere.herokuapp.com/\"+deals,header)\r\n  //     // .then(response => response.json())\r\n  //     // .then((user) => {return user}))\r\n  //     // console.log(deal);\r\n  // }\r\n  \r\n\r\n\r\n\r\n  async componentDidMount() {\r\n    const url =\r\n      \"https://cors-anywhere.herokuapp.com/https://sahmed93846.api-us1.com/api/3/contacts/\";\r\n\r\n    const response = await fetch(url, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Api-Token\":\r\n          \"bcd062dedabcd0f1ac8a568cdcf58660c44d7e79b91763cc1a5d0c03d52c522d851fceb0\"\r\n      }\r\n    });\r\n    const data = await response.json();\r\n    this.setState({ person: data.contacts, loading: false });\r\n    console.log(data);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n        <ContactsTable person={this.state.person}/>\r\n        </div>\r\n    )\r\n  }\r\n        \r\n     \r\n\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\nimport \"./index.css\";\nimport DisplayContacts from \"./containers/Contacts\";\n\nexport default function App() {\n  return (\n    <div className=\"row\">\n      <div>\n            <DisplayContacts />\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}